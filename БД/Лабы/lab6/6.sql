use UNIVER
SELECT MIN(AUDITORIUM_CAPACITY)[Минимальная вместимость],
MAX (AUDITORIUM_CAPACITY)[Максимальная вместимость],
SUM(AUDITORIUM_CAPACITY)[Суммарная вместимость],
COUNT(AUDITORIUM_CAPACITY)[Кол-во аудиторий]
FROM AUDITORIUM

---------------------------2
SELECT AUDITORIUM_TYPE.AUDITORIUM_TYPENAME, 
MIN(AUDITORIUM_CAPACITY)[Минимальная вместимость],
MAX (AUDITORIUM_CAPACITY)[Максимальная вместимость],
SUM(AUDITORIUM_CAPACITY)[Суммарная вместимость],
COUNT(AUDITORIUM_CAPACITY)[Кол-во аудиторий]
FROM AUDITORIUM INNER JOIN AUDITORIUM_TYPE
ON AUDITORIUM.AUDITORIUM_TYPE=AUDITORIUM_TYPE.AUDITORIUM_TYPE
GROUP BY AUDITORIUM_TYPE.AUDITORIUM_TYPENAME

---------------------------3
SELECT *
FROM (SELECT CASE WHEN NOTE BETWEEN 4 AND 5 THEN '4-5'
WHEN NOTE BETWEEN 5 AND 6 THEN '5-6'
WHEN NOTE BETWEEN 6 AND 7 THEN '6-7'
WHEN NOTE BETWEEN 7 AND 8 THEN '7-8'
WHEN NOTE BETWEEN 8 AND 9 THEN '8-9'
WHEN NOTE = 10 THEN '10'
END [NOTES], COUNT(*) [KOLVO]
FROM PROGRESS GROUP BY CASE WHEN NOTE BETWEEN 4 AND 5 THEN '4-5'
WHEN NOTE BETWEEN 5 AND 6 THEN '5-6'
WHEN NOTE BETWEEN 6 AND 7 THEN '6-7'
WHEN NOTE BETWEEN 7 AND 8 THEN '7-8'
WHEN NOTE BETWEEN 8 AND 9 THEN '8-9'
WHEN NOTE = 10 THEN '10'
END) AS T
ORDER BY CASE[NOTES]
WHEN '4-5' THEN 5
WHEN '5-6'THEN 4
WHEN '6-7'THEN 3
WHEN '7-8' THEN 2
WHEN '8-9' THEN 1
WHEN '10' THEN 1
END

---------------------------4
SELECT A.FACULTY, B.PROFESSION,B.COURSE,
ROUND(AVG(CAST(C.NOTE AS FLOAT(4))),2)[note]
FROM FACULTY A INNER JOIN ST_GROUP B
on A.FACULTY=B.FACULTY
inner join STUDENT D
on D.IDGROUP=B.IDGROUP
INNER JOIN PROGRESS C
ON C.IDSTUDENT=D.IDSTUDENT
GROUP BY A.FACULTY, B.PROFESSION,B.COURSE
ORDER BY [note]

---------------------------5
SELECT A.FACULTY, B.PROFESSION,C.SUBJECT,
ROUND(AVG(CAST(C.NOTE AS FLOAT(4))),2)
FROM FACULTY A INNER JOIN ST_GROUP B
on A.FACULTY=B.FACULTY 
inner join STUDENT D
on D.IDGROUP=B.IDGROUP
INNER JOIN PROGRESS C
ON C.IDSTUDENT=D.IDSTUDENT
WHERE A.FACULTY=N'ЛХ'
GROUP BY ROLLUP (A.FACULTY, B.PROFESSION,C.SUBJECT)

---------------------------6
SELECT A.FACULTY, B.PROFESSION,C.SUBJECT,
ROUND(AVG(CAST(C.NOTE AS FLOAT(4))),2)
FROM FACULTY A INNER JOIN ST_GROUP B
on A.FACULTY=B.FACULTY 
inner join STUDENT D
on D.IDGROUP=B.IDGROUP
INNER JOIN PROGRESS C
ON C.IDSTUDENT=D.IDSTUDENT
WHERE A.FACULTY=N'ЛХ'
GROUP BY CUBE (A.FACULTY, B.PROFESSION,C.SUBJECT)

---------------------------7
SELECT A.FACULTY,B.PROFESSION,C.SUBJECT,
ROUND(AVG(CAST(C.NOTE AS FLOAT(4))),2)
FROM FACULTY A INNER JOIN ST_GROUP B
on A.FACULTY=B.FACULTY 
inner join STUDENT D
on D.IDGROUP=B.IDGROUP
INNER JOIN PROGRESS C
ON C.IDSTUDENT=D.IDSTUDENT
WHERE A.FACULTY=N'ЛХ'
GROUP BY A.FACULTY, B.PROFESSION,C.SUBJECT
UNION 
SELECT A.FACULTY,B.PROFESSION,C.SUBJECT,
ROUND(AVG(CAST(C.NOTE AS FLOAT(4))),2)
FROM FACULTY A INNER JOIN ST_GROUP B
on A.FACULTY=B.FACULTY 
inner join STUDENT D
on D.IDGROUP=B.IDGROUP
INNER JOIN PROGRESS C
ON C.IDSTUDENT=D.IDSTUDENT
WHERE A.FACULTY=N'ТТЛП'
GROUP BY A.FACULTY, B.PROFESSION,C.SUBJECT

---------------------------8
SELECT A.FACULTY,B.PROFESSION,C.SUBJECT,
ROUND(AVG(CAST(C.NOTE AS FLOAT(4))),2)
FROM FACULTY A INNER JOIN ST_GROUP B
on A.FACULTY=B.FACULTY 
inner join STUDENT D
on D.IDGROUP=B.IDGROUP
INNER JOIN PROGRESS C
ON C.IDSTUDENT=D.IDSTUDENT
WHERE A.FACULTY=N'ЛХ'
GROUP BY A.FACULTY, B.PROFESSION,C.SUBJECT
EXCEPT
SELECT A.FACULTY,B.PROFESSION,C.SUBJECT,
ROUND(AVG(CAST(C.NOTE AS FLOAT(4))),2)
FROM FACULTY A INNER JOIN ST_GROUP B
on A.FACULTY=B.FACULTY 
inner join STUDENT D
on D.IDGROUP=B.IDGROUP
INNER JOIN PROGRESS C
ON C.IDSTUDENT=D.IDSTUDENT
WHERE A.FACULTY=N'ТТЛП'
GROUP BY A.FACULTY, B.PROFESSION,C.SUBJECT

---------------------------10
SELECT A.SUBJECT, A.NOTE,
(SELECT COUNT(*) FROM PROGRESS B
WHERE B.SUBJECT=A.SUBJECT
AND B.NOTE=A.NOTE)
FROM PROGRESS A
GROUP BY A.SUBJECT, A.NOTE
HAVING A.NOTE=8 OR A.NOTE=9


